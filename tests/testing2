#!/usr/bin/env python
#
#   Greenland -- a Python based scripting environment.
#   Copyright (C) 2015,2016  M E Leypold.
#
#   This program is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License as
#   published by the Free Software Foundation; either version 2 of the
#   License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
#   02110-1301 USA.

""" Test drives greenland.testing2 """

import sys
from greenland.testing2 import *

@suite
class  Basic( Tests ):
    
    @test
    def basic(self,expect,test):
        expect ( lambda : 5*5 ) .returns (25)
        expect ( lambda : 3*5 ) .returns (25)
        expect ( lambda : 5*5 ) .returns (25)        

    @test
    def more(self,expect,test):
        expect ( lambda : 5*5 ) .returns (25)
        expect ( lambda : 3*5 ) .returns (15)

    @test
    def even_more(self,expect,test):
        expect ( lambda : 5*5 ) .returns (25)
        expect ( lambda : 3*5 ) .returns (15)        
        raise Exception()
        
        
class FroomError(Exception):
    pass

def raise_now():
    raise Exception()

@suite
class Extra( Tests ):

    def prepare(self):
        raise_now()

    @test
    def basic(self,expect,test):
        expect ( lambda : raise_now() ) .raises  (Exception)
        expect ( lambda : raise_now() ) .raises  (FroomError)        
        expect ( lambda : raise_now() ) .returns (10)        

    @test
    def more(self,expect,test):
        pass

@suite
class GoodCases( Tests ):

    @test
    def basic(self,expect,test):
        expect ( lambda : 5*5 ) .returns (25)
        expect ( lambda : 3*5 ) .returns (15)
        expect ( lambda : 5*5 ) .returns (25)        

@suite
class MoreGoodCases( Tests ):

    @test
    def basic(self,expect,test):
        expect ( lambda : 5*5 ) .returns (25)
        expect ( lambda : 3*5 ) .returns (15)
        expect ( lambda : 5*5 ) .returns (25)        

        
execute_suites_and_report()
